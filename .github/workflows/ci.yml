name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
    tags:
      - 'deploy/*'
  pull_request:
    branches:
      - 'master'

env:
  REPO_SLUG: tonistiigi/binfmt

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        script:
          - ./hack/lint
          - ./hack/validate-vendor
          - ./hack/install-and-test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Run
        run: |
          ${{ matrix.script }}

  build-base:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.prep.outputs.tag }}
      push: ${{ steps.prep.outputs.push }}
    steps:
      -
        name: Prepare
        id: prep
        run: |
          TAG=na
          PUSH=false
          if [[ $GITHUB_REF == refs/pull/* ]]; then
            TAG=pr-${{ github.event.number }}
          elif [[ $GITHUB_REF == refs/tags/deploy/* ]]; then
            TAG=${GITHUB_REF#refs/tags/deploy/}
            PUSH=true
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            TAG=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            PUSH=true
          fi
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=push::${PUSH}

  build:
    runs-on: ubuntu-latest
    needs: [ build-base ]
    strategy:
      fail-fast: false
      matrix:
        target_base:
          - mainline
          - buildkit
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.binfmt-cache
          key: ${{ runner.os }}-binfmt-${{ matrix.target_base }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-binfmt-${{ matrix.target_base }}-
            ${{ runner.os }}-binfmt-
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Test
        if: matrix.target_base == 'buildkit-helper-all'
        run: |
          docker buildx bake buildkit-test --progress=plain
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Build ${{ matrix.target_base }}
        run: |
          ./hack/images "${{ env.REPO_SLUG }}" "${{ needs.build-base.outputs.tag }}"
        env:
          TARGET: ${{ matrix.target_base }}-all
          CACHEDIR_FROM: /tmp/.binfmt-cache/${{ matrix.target_base }}
          CACHEDIR_TO: /tmp/.binfmt-cache/${{ matrix.target_base }}-new
      -
        # FIXME: Temp fix for https://github.com/moby/buildkit/issues/1850
        name: Move cache
        run: |
          rm -rf /tmp/.binfmt-cache/${{ matrix.target_base }}
          mv /tmp/.binfmt-cache/${{ matrix.target_base }}-new /tmp/.binfmt-cache/${{ matrix.target_base }}

  publish:
    runs-on: ubuntu-latest
    needs: [ validate, build-base, build ]
    if: needs.build-base.outputs.push == 'true'
    strategy:
      fail-fast: true
      matrix:
        target_base:
          - mainline
          - buildkit
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.binfmt-cache
          key: ${{ runner.os }}-binfmt-${{ matrix.target_base }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-binfmt-${{ matrix.target_base }}-
            ${{ runner.os }}-binfmt-
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
      -
        name: Publish ${{ matrix.target_base }}
        run: |
          ./hack/images "${{ env.REPO_SLUG }}" "${{ needs.build-base.outputs.tag }}" push
        env:
          TARGET: ${{ matrix.target_base }}-all
          CACHEDIR_FROM: /tmp/.binfmt-cache/${{ matrix.target_base }}
